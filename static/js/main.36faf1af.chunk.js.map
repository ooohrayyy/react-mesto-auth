{"version":3,"sources":["utils/auth.js","utils/api.js","components/ProtectedRoute.js","resources/images/svgs/logo.svg","components/Page/Header.js","components/Forms/Input.js","resources/images/svgs/info/info-loader.svg","resources/images/svgs/info/info-success.svg","resources/images/svgs/info/info-error.svg","components/Forms/InfoToolTip.js","utils/usePopupListeners.js","components/Popups/InfoPopup.js","components/Forms/ScreenForm.js","components/Page/Login.js","components/Page/Register.js","contexts/CurrentUserContext.js","components/Page/Card.js","components/Page/Footer.js","components/Popups/PopupWithForm.js","components/Popups/EditAvatarPopup.js","components/Popups/EditProfilePopup.js","components/Popups/AddPlacePopup.js","components/Popups/ConfirmDeletePopup.js","components/Popups/ImagePopup.js","components/Popups/MainPopups.js","resources/images/svgs/avatar/avatar-loader.svg","components/Page/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["auth","options","this","_baseUrl","baseUrl","res","ok","json","Promise","reject","status","data","fetch","method","headers","body","JSON","stringify","password","email","then","_checkResponseData","token","api","_token","authorization","deleteCard","bind","toggleLike","values","name","about","description","link","cardId","isLiked","avatar","ProtectedRoute","Component","component","props","loggedIn","to","Header","React","useState","menuIsOpen","setMenuIsOpen","text","place","url","menuButtonStyle","className","userEmail","onClick","onSignOut","src","logo","alt","Input","errorMessage","setErrorMessage","inputModifier","inputValidityState","type","inputType","inputName","value","inputValue","placeholder","inputPlaceholder","minLength","inputMinLength","maxLength","inputMaxLength","autoComplete","required","onChange","evt","onValueChange","onInputValidityChange","target","validity","valid","validationMessage","InfoToolTip","infoImage","state","loading","loaderImage","success","successImage","failed","errorImage","infoModifier","message","usePopupListeners","open","onClose","popupIsReady","undefined","handleEscClose","useCallback","key","handleOverlayClose","classList","contains","addEventListeners","document","addEventListener","removeEventListeners","removeEventListener","useEffect","InfoPopup","ScreenForm","setEmail","setPassword","formValidity","setFormValidity","emailValidity","setEmailValidity","passwordValidity","setPasswordValidity","headingText","form","buttonText","noValidate","currentTarget","checkValidity","onSubmit","preventDefault","disabled","infoPopupState","onPopupClose","Login","onLogin","Register","onRegister","CurrentUserContext","createContext","Card","userInfo","useContext","isLoading","setLikeIsLoading","cardData","item","caption","owner","isOwn","_id","likes","some","like","cardLikeButtonClassName","onCardClick","onCardDelete","onCardLike","length","i","Footer","PopupWithForm","onFormValidityChange","window","location","reload","heading","children","formValidityState","EditAvatarPopup","setLink","inputValidity","setInputValidity","onUpdateAvatar","EditProfilePopup","setName","setDescription","nameValidity","setNameValidity","descriptionValidity","setDescriptionValidity","onUpdateUser","AddPlacePopup","placeName","setPlaceName","placePic","setPlacePic","picValidity","setPicValidity","onAddPlaceSubmit","ConfirmDeletePopup","initialValidityState","onDeleteConfirmation","card","ImagePopup","MainPopups","popupProps","selectedCard","editProfileState","editAvatarState","addPlaceState","confirmDeleteState","imagePopupState","Main","mainProps","cards","onEditAvatar","onEditProfile","onAddPlace","avatarLoader","map","App","setLoggedIn","currentUser","setCurrentUser","setUserEmail","setCards","setSelectedCard","history","useHistory","setInfoPopupState","setEditAvatarState","setEditProfileState","setAddPlaceState","setConfirmDeleteState","setImagePopupState","closeAllPopups","localStorage","removeItem","push","newCard","newCards","catch","err","console","log","patchUserInfo","setTimeout","updateAvatar","postCard","deletedCard","filter","jwt","checkCredentials","fetchUserInfo","fetchInitialCards","basename","Provider","path","authorize","setItem","register","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36faf1af.chunk.js","sourcesContent":["class Auth {\n  constructor (options) {\n    this._baseUrl = options.baseUrl;\n  }\n\n  _checkResponseData (res) { // Проверка ответа от сервера\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  register (data) { // Регистрация пользователя\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  authorize (data) { // Авторизация пользователя\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  checkCredentials (token) { // Проверка токена\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n}\n\nconst auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n});\n\nexport default auth;","class Api {\n  constructor (options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.authorization;\n\n    this.deleteCard = this.deleteCard.bind(this);\n    this.toggleLike = this.toggleLike.bind(this);\n  }\n\n  _checkResponseData (res) { // Проверка ответа от сервера\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  fetchUserInfo () { // Загрузка информации о пользователе\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  fetchInitialCards () { // Загрузка готовых карточек\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  patchUserInfo (values) { // Обновление информации о пользователе\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: values.name,\n        about: values.description\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  postCard (data) { // Отправка карточки\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  deleteCard (cardId) { // Удаление карточки\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  toggleLike (cardId, isLiked) { // Установка и снятие лайка\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(res => this._checkResponseData(res));\n  }\n\n  updateAvatar (link) { // Обновление аватарки\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(res => this._checkResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\n  authorization: '21765504-482c-4ec0-96f1-ca3e4078b259'\n});\n\nexport default api;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute ({ component: Component, ...props }) {\n  return (\n    <Route>\n      {props.loggedIn ? (<Component {...props} />) : (<Redirect to=\"./sign-in\" />)}\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../resources/images/svgs/logo.svg';\n\nfunction Header (props) {\n  const [menuIsOpen, setMenuIsOpen] = React.useState(false); // * Стейт-переменная состояния меню\n\n  function toggleMenu () { // * Открытие/закрытие меню\n    setMenuIsOpen(!menuIsOpen);\n  }\n\n  // * Переменные\n\n  const link = { // Свойства ссылки\n    text: (props.place === 'register') ? 'Войти' : 'Регистрация',\n    url: (props.place === 'register') ? './sign-in' : './sign-up'\n  }\n\n  const menuButtonStyle = menuIsOpen ? 'header__menu-btn header__menu-btn_close' : 'header__menu-btn'; // Класс кнопки меню\n\n  // * Возвращаемое значение\n\n  return (\n    <header className=\"container__header header\">\n      {((props.place === 'main') && menuIsOpen) && (<menu className=\"header__menu\">\n        <p className=\"header__email header__email_place_menu\">{props.userEmail}</p>\n        <button className=\"header__out header__out_place_menu\" onClick={props.onSignOut}>Выйти</button>\n      </menu>)}\n      <div className=\"header__body\">\n        <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto\" />\n        {(props.place === 'main') && (<p className=\"header__email header__email_place_body\">{props.userEmail}</p>)}\n        {(props.place === 'main') && (<button className=\"header__out header__out_place_body\" onClick={props.onSignOut}>Выйти</button>)}\n        {(props.place === 'main') && (<button className={menuButtonStyle} onClick={toggleMenu} />)}\n        {(props.place !== 'main') && (<Link className=\"header__link\" to={link.url}>{link.text}</Link>)}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Input (props) {\n  const [errorMessage, setErrorMessage] = React.useState(''); // * Стейт-переменная сообщения об ошибке\n\n  function handleChange (evt) { // * Обработчик изменения значения инпута\n    props.onValueChange(evt);\n    props.onInputValidityChange(evt.target.validity.valid);\n    setErrorMessage(evt.target.validationMessage);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <>\n      <input\n        className={`form__input input ${props.inputModifier || ''} ${(!props.inputValidityState ? 'input_invalid' : '')}`}\n        type={props.inputType}\n        name={props.inputName}\n        value={props.inputValue}\n        placeholder={props.inputPlaceholder}\n        minLength={props.inputMinLength || '2'} maxLength={props.inputMaxLength || '40'}\n        autoComplete=\"off\"\n        required\n        onChange={handleChange}\n      />\n      {!props.inputValidityState && (<span className=\"input__error\">{errorMessage}</span>)}\n    </>\n  );\n}\n\nexport default Input;","export default __webpack_public_path__ + \"static/media/info-loader.1f235894.svg\";","export default __webpack_public_path__ + \"static/media/info-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/info-error.df8eddf6.svg\";","import loaderImage from '../../resources/images/svgs/info/info-loader.svg';\nimport successImage from '../../resources/images/svgs/info/info-success.svg';\nimport errorImage from '../../resources/images/svgs/info/info-error.svg';\n\nfunction InfoToolTip (props) {\n  let infoImage; // * Переменная иллюстрации\n\n  if (props.state.loading) {\n    infoImage = loaderImage;\n  } else if (props.state.success) {\n    infoImage = successImage;\n  } else if (props.state.failed) {\n    infoImage = errorImage;\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <div className={`info ${props.infoModifier}`}>\n      <img className=\"info__img\" src={infoImage} alt=\"Иллюстрация сообщения\" />\n      <h3 className=\"info__text\">{props.state.loading ? 'Загрузка...' : props.state.message}</h3>\n    </div>\n  );\n}\n\nexport default InfoToolTip;","import React from 'react';\n\nfunction usePopupListeners (props) {\n  const {\n    state: { open, loading, failed },\n    onClose\n  } = props;\n\n  const popupIsReady = (props.state.success !== undefined) ? !loading : (!loading && !failed);\n\n  const handleEscClose = React.useCallback((evt) => {\n    if ((evt.key === 'Escape') && popupIsReady) {\n      onClose();\n    }\n  }, [popupIsReady, onClose]);\n\n  const handleOverlayClose = React.useCallback((evt) => {\n    if (evt.target.classList.contains('popup') && popupIsReady) {\n      onClose();\n    }\n  }, [popupIsReady, onClose]);\n\n  const addEventListeners = React.useCallback(() => {\n    document.addEventListener('keydown', handleEscClose);\n    document.addEventListener('click', handleOverlayClose);\n  }, [handleEscClose, handleOverlayClose]);\n\n  const removeEventListeners = React.useCallback(() => {\n    document.removeEventListener('keydown', handleEscClose);\n    document.removeEventListener('click', handleOverlayClose);\n  }, [handleEscClose, handleOverlayClose]);\n\n  React.useEffect(() => {\n    if (open) {\n      addEventListeners();\n    }\n\n    return () => {\n      if (open) {\n        removeEventListeners();\n      }\n    }\n  }, [open, addEventListeners, removeEventListeners]);\n}\n\nexport default usePopupListeners;","import InfoToolTip from '../Forms/InfoToolTip.js';\n\nimport usePopupListeners from '../../utils/usePopupListeners.js';\n\nfunction InfoPopup (props) {\n  usePopupListeners(props); // * Хук слушателей для попапа\n\n  return (\n    <div className={`popup popup-info root__popup ${props.state.open ? 'popup_opened' : ''}`}>\n      <div className='popup__tooltip'>\n        {(!props.state.loading && !props.state.success) &&\n        (<button className=\"close-btn close-btn_place_form\" type=\"button\" onClick={props.onClose} />)}\n        <InfoToolTip infoModifier=\"info_place_screen\" state={props.state} />\n      </div>\n    </div>\n  );\n}\n\nexport default InfoPopup;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Input from './Input.js';\nimport InfoPopup from '../Popups/InfoPopup.js';\n\nfunction ScreenForm (props) {\n  // * Стейт-переменные\n\n  const [email, setEmail] = React.useState(''); // Email пользователя\n  const [password, setPassword] = React.useState(''); // Пароль пользователя\n\n  const [formValidity, setFormValidity] = React.useState(false); // Состояние валидности формы\n  const [emailValidity, setEmailValidity] = React.useState(true); // Состояние валидности инпута с именем\n  const [passwordValidity, setPasswordValidity] = React.useState(true); // Состояние валидности инпута с описанием\n\n  // * Переменные\n\n  const headingText = (props.form === 'register') ? 'Регистрация' : 'Вход';\n  const buttonText = (props.form === 'register') ? 'Зарегистрироваться' : 'Войти';\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handleEmailChange (evt) { // Изменение адреса почты\n    setEmail(evt.target.value);\n  }\n\n  function handlePasswordChange (evt) { // Изменение пароля\n    setPassword(evt.target.value);\n  }\n\n  function handleChange (evt) { // Изменение валидности формы\n    setFormValidity(evt.currentTarget.checkValidity());\n  }\n\n  function handleSubmit (evt) { // Сабмит формы\n    evt.preventDefault();\n\n    props.onSubmit({\n      password,\n      email\n    });\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <>\n      <form className=\"form form_place_screen\" noValidate onChange={handleChange} onSubmit={handleSubmit}>\n        <h1 className=\"form__heading form__heading_place_screen\">{headingText}</h1>\n        <Input\n          inputModifier=\"input_place_screen\"\n          inputName=\"login_email\"\n          inputValue={email}\n          inputType=\"email\"\n          inputPlaceholder=\"Email\"\n          inputValidityState={emailValidity}\n          onInputValidityChange={setEmailValidity}\n          onValueChange={handleEmailChange}\n        />\n        <Input\n          inputModifier=\"input_place_screen\"\n          inputName=\"login_password\"\n          inputValue={password}\n          inputType=\"password\"\n          inputPlaceholder=\"Пароль\"\n          inputMinLength=\"6\"\n          inputValidityState={passwordValidity}\n          onInputValidityChange={setPasswordValidity}\n          onValueChange={handlePasswordChange}\n        />\n        <button className=\"form__button button button_place_screen\" type=\"submit\" disabled={!formValidity}>{buttonText}</button>\n      </form>\n      {(props.form === 'register') &&\n      (<Link className=\"container__sign-in\" to=\"./sign-in\">Уже зарегистрировались? Войти</Link>)}\n      <InfoPopup\n        state={props.infoPopupState}\n        onClose={props.onPopupClose}\n      />\n    </>\n  );\n}\n\nexport default ScreenForm;","import React from 'react';\n\nimport Header from './Header.js';\nimport ScreenForm from '../Forms/ScreenForm.js';\n\nfunction Login (props) {\n  return (\n    <div className=\"container root__container\">\n      <Header place=\"login\" userEmail={props.userEmail} />\n      <ScreenForm\n        form=\"login\"\n        onSubmit={props.onLogin}\n        infoPopupState={props.infoPopupState}\n        onPopupClose={props.onPopupClose}\n      />\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\n\nimport Header from './Header.js';\nimport ScreenForm from '../Forms/ScreenForm.js';\n\nfunction Register (props) {\n  return (\n    <div className=\"container root__container\">\n      <Header place=\"register\" userEmail={props.userEmail} />\n      <ScreenForm\n        form=\"register\"\n        onSubmit={props.onRegister}\n        infoPopupState={props.infoPopupState}\n        onPopupClose={props.onPopupClose}\n      />\n    </div>\n  );\n}\n\nexport default Register;","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport { CurrentUserContext };","import React from 'react';\n\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\n\nfunction Card (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n\n  const [isLoading, setLikeIsLoading] = React.useState(false); // * Стейт-переменная загрузки лайка\n\n  // * Обработка данных о карточке\n\n  const cardData = props.item;\n  cardData.alt = cardData.name;\n  cardData.caption = `${cardData.alt} / © ${cardData.owner.name}`;\n  cardData.isOwn = cardData.owner._id === userInfo._id;\n  cardData.isLiked = cardData.likes.some(like => like._id === userInfo._id)\n\n  const cardLikeButtonClassName = ( // * Стиль кнопки лайка\n    `card__like ${cardData.isLiked ? 'card__like_active' : ''}`\n  );\n\n  // * Функции\n\n  // -- Обработчики карточки\n\n  function handleClick () { // Клик по картинке\n    props.onCardClick(cardData);\n  }\n\n  function handleDelete () { // Удаление карточки\n    props.onCardDelete(cardData);\n  }\n\n  function handleLike () { // Снятие и установка лайка\n    setLikeIsLoading(true);\n\n    props.onCardLike(cardData);\n  }\n\n  // * Эффекты при монтировании компонента\n\n  React.useEffect(() => { // Обновление иконки лайка\n    setLikeIsLoading(false);\n  }, [props]);\n\n  // * Возвращаемое значение\n\n  return (\n    <article className=\"card\" key={props.i}>\n      <button className=\"card__open-fullpic\" type=\"button\" onClick={handleClick}>\n        <img className=\"card__image\" src={cardData.link} alt={cardData.alt} />\n      </button>\n      {cardData.isOwn && (<button className=\"card__delete\" type=\"button\" onClick={handleDelete}></button>)}\n      <div className=\"card__label\">\n        <h2 className=\"card__name\">{cardData.name}</h2>\n        {!isLoading && (<button className={cardLikeButtonClassName} type=\"button\" onClick={handleLike}>\n          <p className=\"card__counter\">{cardData.likes.length}</p>\n        </button>)}\n        {isLoading && (<button className=\"card__loader\" disabled />)}\n      </div>\n    </article>\n  );\n}\n\nexport default Card;","function Footer () {\n  return (\n    <footer className=\"container__footer footer\">\n      <p className=\"footer__text\">&copy; 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nimport InfoToolTip from '../Forms/InfoToolTip.js';\nimport usePopupListeners from '../../utils/usePopupListeners.js';\n\nfunction PopupWithForm (props) {\n  // * Обработчики формы\n\n  function handleChange (evt) { // Изменение валидности формы\n    props.onFormValidityChange(evt.currentTarget.checkValidity());\n  }\n\n  function handleRefresh () { // Перезагрузка страницы (при ошибке запроса)\n    window.location.reload();\n  }\n\n  usePopupListeners(props); // * Хук слушателей для попапа\n  \n  const infoModifier = (props.name === 'delete') ? 'info_place_delete' : 'info_place_popup';\n\n  // * Возвращаемое значение\n\n  return (\n    <div className={`popup popup-${props.name} root__popup ${props.state.open ? 'popup_opened' : ''}`}>\n        <form className=\"form form_place_popup\" name={props.name} noValidate onChange={handleChange} onSubmit={props.onSubmit}>\n          {(!props.state.loading && !props.state.failed) &&\n          (<button className=\"close-btn close-btn_place_form\" type=\"button\" onClick={props.onClose} />)}\n          {props.state.failed && (<button className=\"form__refresh\" type=\"button\" onClick={handleRefresh} />)}\n          <h2\n            className={`form__heading ${(props.name === 'delete') ? 'form__heading_place_delete' : ''}`}\n          >\n            {props.heading}\n          </h2>\n          {(!props.state.loading && !props.state.failed) && props.children}\n          {(!props.state.loading && !props.state.failed) && (<button\n            className={`form__button button ${(props.name === 'delete') ? 'button_place_delete' : ''}`}\n            type=\"submit\"\n            disabled={!props.formValidityState}\n          >\n            {(props.name === 'delete') ? 'Удалить' : 'Сохранить'}\n          </button>)}\n          {(props.state.loading || props.state.failed) &&\n          (<InfoToolTip infoModifier={infoModifier} state={props.state} />)}\n        </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from '../Forms/Input.js';\n\nfunction EditAvatarPopup (props) {\n  // * Стейт-переменные\n\n  const [link, setLink] = React.useState(''); // Адрес файла аватарки\n\n  const [formValidity, setFormValidity] = React.useState(false); // Состояние валидности формы\n  const [inputValidity, setInputValidity] = React.useState(true); // Состояние валидности инпута\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handleLinkChange (evt) { // Изменение значения инпута\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит формы\n    evt.preventDefault();\n\n    props.onUpdateAvatar(link);\n\n    setLink('');\n    setInputValidity(true);\n    setFormValidity(false);\n  }\n\n  function handleClose () { // Закрытие формы\n    props.onClose();\n\n    setLink('');\n    setInputValidity(true);\n    setFormValidity(false);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"avatar\"\n      heading=\"Обновить аватар\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}>\n      <Input\n        inputName=\"avatar\"\n        inputValue={link}\n        inputType=\"url\"\n        inputPlaceholder=\"Ссылка на фото\"\n        inputMaxLength=\"200\"\n        inputValidityState={inputValidity}\n        onInputValidityChange={setInputValidity}\n        onValueChange={handleLinkChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from '../Forms/Input.js';\n\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n  // * Cтейт-переменные\n\n  const [name, setName] = React.useState(''); // Имя пользователя\n  const [description, setDescription] = React.useState(''); // Описание пользователя\n\n  const [formValidity, setFormValidity] = React.useState(true); // Состояние валидности формы\n  const [nameValidity, setNameValidity] = React.useState(true); // Состояние валидности инпута с именем\n  const [descriptionValidity, setDescriptionValidity] = React.useState(true); // Состояние валидности инпута с описанием\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handleNameChange (evt) { // Изменение имени пользователя\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange (evt) { // Изменение описания пользователя\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит\n    evt.preventDefault();\n\n    props.onUpdateUser({\n      name,\n      description\n    });\n\n    setFormValidity(true);\n  }\n\n  function handleClose () { // Закрытие\n    props.onClose();\n\n    setName(userInfo.name);\n    setDescription(userInfo.about);\n\n    setNameValidity(true);\n    setDescriptionValidity(true);\n    setFormValidity(true);\n  }\n\n  // * Эффекты при монтировании компонента\n\n  React.useEffect(() => { // Установка имени и описания пользователя по умолчанию\n    setName(userInfo.name);\n    setDescription(userInfo.about);\n  }, [userInfo]);\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"profile\"\n      heading=\"Редактировать профиль\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}\n    >\n      <Input\n        inputType=\"text\"\n        inputName=\"name\"\n        inputValue={name}\n        inputPlaceholder=\"Имя\"\n        inputValidityState={nameValidity}\n        onInputValidityChange={setNameValidity}\n        onValueChange={handleNameChange}\n      />\n      <Input\n        inputModifier=\"input_description\"\n        inputType=\"text\"\n        inputName=\"description\"\n        inputValue={description}\n        inputPlaceholder=\"Описание\"\n        inputMaxLength=\"200\"\n        inputValidityState={descriptionValidity}\n        onInputValidityChange={setDescriptionValidity}\n        onValueChange={handleDescriptionChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from '../Forms/Input.js';\n\nfunction AddPlacePopup (props) {\n  // * Стейт-переменные\n\n  const [placeName, setPlaceName] = React.useState(''); // Название места\n  const [placePic, setPlacePic] = React.useState(''); // Адрес иллюстрации места\n\n  const [formValidity, setFormValidity] = React.useState(false); // Состояние валидности формы\n  const [nameValidity, setNameValidity] = React.useState(true); // Состояние валидности инпута с названием\n  const [picValidity, setPicValidity] = React.useState(true); // Состояние валидности инпута с адресом\n\n  // * Функции\n\n  // -- Обработчики формы\n\n  function handlePlaceNameChange (evt) { // Изменение названия\n    setPlaceName(evt.target.value);\n  }\n\n  function handlePlacePicChange (evt) { // Изменение адреса\n    setPlacePic(evt.target.value);\n  }\n\n  function handleSubmit (evt) { // Сабмит\n    evt.preventDefault();\n\n    props.onAddPlaceSubmit({\n      name: placeName,\n      link: placePic\n    });\n\n    setPlaceName('');\n    setPlacePic('');\n\n    setNameValidity(true);\n    setPicValidity(true);\n    setFormValidity(false);\n  }\n\n  function handleClose () { // Закрытие\n    props.onClose();\n\n    setPlaceName('');\n    setPlacePic('');\n\n    setNameValidity(true);\n    setPicValidity(true);\n    setFormValidity(false);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={formValidity}\n      onFormValidityChange={setFormValidity}\n      name=\"card\"\n      heading=\"Новое место\"\n      onSubmit={handleSubmit}\n      onClose={handleClose}\n    >\n      <Input\n        inputType=\"text\"\n        inputName=\"place\"\n        inputValue={placeName}\n        inputPlaceholder=\"Название\"\n        inputMaxLength=\"30\"\n        inputValidityState={nameValidity}\n        onInputValidityChange={setNameValidity}\n        onValueChange={handlePlaceNameChange}\n      />\n      <Input\n        inputModifier=\"input_card-link\"\n        inputType=\"url\"\n        inputName=\"link\"\n        inputValue={placePic}\n        inputPlaceholder=\"Ссылка на картинку\"\n        inputMaxLength=\"200\"\n        inputValidityState={picValidity}\n        onInputValidityChange={setPicValidity}\n        onValueChange={handlePlacePicChange}\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm.js';\n\nfunction ConfirmDeletePopup (props) {\n  // * Обработчик сабмита формы\n\n  function handleSubmit (evt) {\n    evt.preventDefault();\n    props.onDeleteConfirmation(props.card);\n  }\n\n  // * Возвращаемое значение\n\n  return (\n    <PopupWithForm\n      state={props.state}\n      formValidityState={props.initialValidityState}\n      name=\"delete\"\n      heading=\"Вы уверены?\"\n      onSubmit={handleSubmit}\n      onClose={props.onClose}\n    />\n  )\n}\n\nexport default ConfirmDeletePopup;","import usePopupListeners from '../../utils/usePopupListeners.js';\n\nfunction ImagePopup (props) {\n  usePopupListeners(props); // * Хук слушателей для попапа\n\n  return (\n    <div className={`popup popup-fullpic root__popup ${props.state.open ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__figure\">\n        {props.card && (<button className=\"close-btn close-btn_place_fullpic\" type=\"button\" onClick={props.onClose} />)}\n        <img\n          className=\"popup__fullpic\"\n          src={props.card ? props.card.link : null}\n          alt={props.card ? props.card.alt : null}\n        />\n        <figcaption className=\"popup__caption\">{props.card ? props.card.caption : null}</figcaption>\n      </figure>\n    </div>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmDeletePopup from './ConfirmDeletePopup.js';\nimport ImagePopup from \"./ImagePopup.js\";\n\nfunction MainPopups (props) {\n  const { // * Пропсы из App\n    selectedCard,\n    editProfileState,\n    editAvatarState,\n    addPlaceState,\n    confirmDeleteState,\n    imagePopupState,\n    onUpdateUser,\n    onUpdateAvatar,\n    onAddPlaceSubmit,\n    onDeleteConfirmation,\n    onClose\n  } = props.popupProps;\n\n  return (\n    <>\n      <EditProfilePopup\n        state={editProfileState}\n        initialValidityState={true}\n        onUpdateUser={onUpdateUser}\n        onClose={onClose}\n      />\n      <EditAvatarPopup\n        state={editAvatarState}\n        initialValidityState={false}\n        onUpdateAvatar={onUpdateAvatar}\n        onClose={onClose}\n      />\n      <AddPlacePopup\n        state={addPlaceState}\n        initialValidityState={false}\n        onAddPlaceSubmit={onAddPlaceSubmit}\n        onClose={onClose}\n      />\n      <ConfirmDeletePopup\n        card={selectedCard}\n        state={confirmDeleteState}\n        initialValidityState={true}\n        onDeleteConfirmation={onDeleteConfirmation}\n        onClose={onClose}\n      />\n      <ImagePopup card={selectedCard} state={imagePopupState} onClose={onClose} />\n    </>\n  );\n}\n\nexport default MainPopups;","export default __webpack_public_path__ + \"static/media/avatar-loader.07e847c1.svg\";","import React from 'react';\n\nimport Header from './Header.js';\nimport Card from './Card.js';\nimport Footer from './Footer.js';\nimport MainPopups from '../Popups/MainPopups.js';\n\nimport avatarLoader from '../../resources/images/svgs/avatar/avatar-loader.svg';\n\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\n\nfunction Main (props) {\n  const userInfo = React.useContext(CurrentUserContext); // * Подписка на контекст\n\n  const { // * Пропсы из App\n    cards,\n    onSignOut,\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick,\n    onCardDelete,\n    onCardLike\n  } = props.mainProps;\n\n  // * Возвращаемое значение\n\n  return (\n    <>\n      <div className=\"container root__container\">\n        <Header place=\"main\" userEmail={props.userEmail} onSignOut={onSignOut} />\n        <main className=\"main container__main\">\n          <section className=\"profile main__profile\">\n            <div className=\"profile__main\">\n              <img className=\"profile__avatar\" src={userInfo.avatar || avatarLoader} alt=\"Портрет пользователя\" />\n              <button className=\"profile__avatar-button\" onClick={onEditAvatar} />\n              <div className=\"profile__text-info\">\n                <h1 className=\"profile__name\">{userInfo.name || 'Загрузка...'}</h1>\n                <button className=\"profile__edit\" type=\"button\" onClick={onEditProfile} />\n                <p className=\"profile__description\">{userInfo.about || 'Пожалуйста, подождите'}</p>\n              </div>\n            </div>\n            <button className=\"profile__add\" type=\"button\" onClick={onAddPlace} />\n          </section>\n          <section className=\"cards main__cards\">\n            {cards.map((item) => (\n              <Card\n                item={item}\n                key={item._id}\n                onCardClick={onCardClick}\n                onCardDelete={onCardDelete}\n                onCardLike={onCardLike}\n              />\n            ))}\n          </section>\n        </main>\n        <Footer />\n      </div>\n      <MainPopups popupProps={props.popupProps} />\n    </>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport { HashRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport auth from '../utils/auth.js';\nimport api from '../utils/api.js';\n\nimport ProtectedRoute from './ProtectedRoute.js';\nimport Login from './Page/Login.js';\nimport Register from './Page/Register.js';\nimport Main from './Page/Main.js';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\n// ! Привет команде код-ревью! Работа оказалась неожиданно масштабной — многое пришлось переписывать.\n// ! Кажется, всё работает :)\n\nfunction App () {\n  // * Стейт-переменные\n\n  // -- Общие состояния\n\n  const [loggedIn, setLoggedIn] = React.useState(false); // Статус пользователя в системе\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '' }); // Активный пользователь\n  const [userEmail, setUserEmail] = React.useState(''); // E-mail пользователя\n  const [cards, setCards] = React.useState([]); // Массив карточек\n  const [selectedCard, setSelectedCard] = React.useState({}); // Выбранная карточка\n\n  const history = useHistory();\n\n  // -- Состояния попапов\n\n  const [infoPopupState, setInfoPopupState] = React.useState({ // Состояние попапа входа и регистрации\n    open: false,\n    success: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [editAvatarState, setEditAvatarState] = React.useState({ // Состояние попапа «Редактировать аватар»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [editProfileState, setEditProfileState] = React.useState({ // Состояние попапа «Редактировать профиль»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [addPlaceState, setAddPlaceState] = React.useState({ // Состояние попапа «Добавить карточку»\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [confirmDeleteState, setConfirmDeleteState] = React.useState({ // Состояние попапа с подтверждением удаления\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  const [imagePopupState, setImagePopupState] = React.useState({ // Состояние попапа с полноразмерной картинкой\n    open: false,\n    loading: false,\n    failed: false,\n    message: null\n  });\n\n  // * Функции\n\n  // -- Функции вызова попапов\n\n  function handleEditAvatarClick () { // Вызов попапа «Редактировать аватар»\n    setEditAvatarState({ ...editAvatarState, open: true });\n  }\n\n  function handleEditProfileClick () { // Вызов попапа «Редактировать профиль»\n    setEditProfileState({ ...editProfileState, open: true });\n  }\n\n  function handleAddPlaceClick () { // Вызов попапа «Добавить карточку»\n    setAddPlaceState({ ...addPlaceState, open: true });\n  }\n\n  function handleDeleteCardClick () { // Вызов попапа с подтверждением удаления\n    setSelectedCard(this.item);\n    setConfirmDeleteState({ ...confirmDeleteState, open: true });\n  }\n\n  function handleCardClick () { // Вызов попапа с полноразмерной картинкой\n    setSelectedCard(this.item);\n    setImagePopupState({ ...imagePopupState, open: true });\n  }\n\n  // -- Обработчики запросов\n\n  function handleRegister (data) { // Регистрация пользователя\n    setInfoPopupState({ ...infoPopupState, open: true, loading: true });\n\n    auth.register(data)\n      .then(() => {\n        setInfoPopupState({\n          ...infoPopupState,\n          open: true,\n          loading: false,\n          success: true,\n          message: 'Вы успешно зарегистрировались!'\n        });\n        setTimeout(() => {\n          setInfoPopupState({\n            ...infoPopupState,\n            open: false,\n            success: false,\n            message: ''\n          });\n        }, 1800);\n      })\n      .catch(err => {\n        setInfoPopupState({\n          ...infoPopupState,\n          open: true,\n          success: false,\n          loading: false,\n          failed: true,\n          message: 'Что-то пошло не так! Попробуйте ещё раз'\n        });\n        console.log(err);\n      });\n  }\n\n  function handleLogin (data) { // Авторизация пользователя\n    setInfoPopupState({ ...infoPopupState, open: true, loading: true });\n\n    auth.authorize(data)\n      .then(res => {\n        setInfoPopupState({\n          ...infoPopupState,\n          open: true,\n          loading: false,\n          success: true,\n          message: 'Вы успешно авторизовались!'\n        });\n        localStorage.setItem('jwt', res.token);\n        setLoggedIn(true);\n        setUserEmail(data.email);\n        setTimeout(() => {\n          history.push('./main');\n          setInfoPopupState({\n            ...infoPopupState,\n            open: false,\n            success: false,\n            message: ''\n          });\n        }, 1800);\n      })\n      .catch(err => {\n        console.log(err);\n        setInfoPopupState({\n          ...infoPopupState,\n          open: true,\n          success: false,\n          loading: false,\n          failed: true,\n          message: 'Что-то пошло не так! Попробуйте ещё раз'\n        });\n      });\n  }\n\n  function handleSignOut () { // Деавторизация пользователя\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    setUserEmail('');\n    history.push('./sign-in');\n  }\n\n  function handleUpdateAvatar (link) { // Обновление аватарки\n    setEditAvatarState({ ...editAvatarState, loading: true });\n\n    api.updateAvatar(link)\n      .then(res => {\n        setCurrentUser(res);\n        setTimeout(() => {\n          setEditAvatarState({ ...editAvatarState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setEditAvatarState({\n          ...editAvatarState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleUpdateUser (values) { // Обновление информации о пользователе\n    setEditProfileState({ ...editProfileState, loading: true });\n\n    api.patchUserInfo(values)\n      .then(res => {\n        setCurrentUser(res);\n        setTimeout(() => {\n          setEditProfileState({ ...editProfileState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setEditProfileState({\n          ...editProfileState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleAddPlaceSubmit (data) { // Добавление новой карточки\n    setAddPlaceState({ ...addPlaceState, loading: true });\n\n    api.postCard(data)\n      .then(res => {\n        setCards([res, ...cards]);\n        setTimeout(() => {\n          setAddPlaceState({ ...addPlaceState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setAddPlaceState({\n          ...addPlaceState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleCardDelete (card) { // Удаление карточки\n    setConfirmDeleteState({ ...confirmDeleteState, loading: true });\n\n    api.deleteCard(card._id)\n      .then(deletedCard => {\n        const newCards = cards.filter(deletedCard => deletedCard._id !== card._id);\n        setCards(newCards);\n        setTimeout(() => {\n          setConfirmDeleteState({ ...confirmDeleteState, open: false, loading: false });\n        }, 400);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n        setConfirmDeleteState({\n          ...confirmDeleteState,\n          loading: false,\n          failed: true,\n          message: err\n        });\n      });\n  }\n\n  function handleCardLike (card) { // Установка и снятие лайка\n    api.toggleLike(card._id, card.isLiked)\n      .then(newCard => {\n        const newCards = cards.map(item => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  // -- Другие функции\n  \n  function closeAllPopups () { // Закрытие всех попапов и обнуление выбранной карточки\n    setInfoPopupState({ ...infoPopupState, open: false });\n    setEditAvatarState({ ...editAvatarState, open: false });\n    setEditProfileState({ ...editProfileState, open: false });\n    setAddPlaceState({ ...addPlaceState, open: false });\n    setConfirmDeleteState({ ...confirmDeleteState, open: false });\n    setImagePopupState({ ...imagePopupState, open: false });\n\n    setSelectedCard(null);\n  }\n\n  // * Объекты пропсов\n\n  const mainProps = { // Пропсы для главного экрана\n    cards,\n    onSignOut: handleSignOut,\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onCardClick: handleCardClick,\n    onCardDelete: handleDeleteCardClick,\n    onCardLike: handleCardLike\n  }\n\n  const popupProps = { // Пропсы для главных попапов\n    selectedCard,\n    editProfileState,\n    editAvatarState,\n    addPlaceState,\n    confirmDeleteState,\n    imagePopupState,\n    onUpdateUser: handleUpdateUser,\n    onUpdateAvatar: handleUpdateAvatar,\n    onAddPlaceSubmit: handleAddPlaceSubmit,\n    onDeleteConfirmation: handleCardDelete,\n    onClose: closeAllPopups\n  }\n\n  // * Эффекты при монтировании компонента\n\n  // -- Запросы к серверу\n\n  React.useEffect(() => { // Проверка токена\n    if (localStorage.jwt) {\n      auth.checkCredentials(localStorage.jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setUserEmail(res.data.email);\n          history.push('./main');\n        })\n        .catch(err => console.log(err));\n    }\n  }, [history]);\n\n  React.useEffect(() => { // Получение данных о пользователе\n    api.fetchUserInfo()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  React.useEffect(() => { // Получение карточек\n    api.fetchInitialCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // * Возвращаемое значение\n\n  return (\n    <HashRouter basename=\"/react-mesto-auth\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Switch>\n          <Route path=\"/sign-in\">\n            <Login\n              userEmail={userEmail}\n              onLogin={handleLogin}\n              infoPopupState={infoPopupState}\n              onPopupClose={closeAllPopups}\n            />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register\n              userEmail={userEmail}\n              onRegister={handleRegister}\n              infoPopupState={infoPopupState}\n              onPopupClose={closeAllPopups}\n            />\n          </Route>\n          <ProtectedRoute\n            path=\"/\"\n            component={Main}\n            loggedIn={loggedIn}\n            userEmail={userEmail}\n            mainProps={mainProps}\n            popupProps={popupProps}\n          />\n        </Switch>\n      </CurrentUserContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}